<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.min.store.impl.SellerMapper">
	
	<select id="itemList" parameterType="item" resultType="item">
		SELECT * FROM ( SELECT A.*, ROWNUM RN FROM (

		  SELECT ROW_NUMBER() OVER(ORDER BY  ADD_TIME DESC) AS NO, i.ITEM_NO, i.SELLER_ID, i.TYPE, TO_CHAR(i.ADD_TIME, 'YYYY-MM-DD HH24:MI:SS') AS ADD_TIME, i.TITLE, i.PRICE, i.STOCK, i.PIC, COUNT(R.TITLE) AS CNT
		  FROM ITEM I, REVIEW R
		  WHERE I.ITEM_NO = R.ITEM_NO(+)
		  AND SELLER_ID = #{seller_id}
		  GROUP BY I.ITEM_NO, I.SELLER_ID, I.TYPE, I.ADD_TIME, I.TITLE, I.PRICE, I.STOCK, I.PIC
		  ORDER BY 1
		
		) A ) B WHERE RN BETWEEN #{first} AND #{last}
	</select>
	
	<select id="itemCnt" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM ITEM
		WHERE SELLER_ID =  #{seller_id}
	</select>
	
	<!--상품등록 -->
	<insert id="insertItem" parameterType="Item">
		INSERT INTO ITEM(ITEM_NO, SELLER_ID, TYPE, TITLE, CONTENT, CONTENT_D, PRICE, STOCK, PIC, PIC_D)
		VALUES(  ITEM_SEQ.NEXTVAL, 
				 #{seller_id},
				 #{type},
				 #{title},
				 #{content},
				 #{content_d},
				 #{price},
				 #{stock},
				 #{pic},
				 #{pic_d}
			)
	
	</insert>
	
	<!--수정할 때 조회-->
	<select id="upsetSel" resultType="Item" parameterType="string">
		SELECT TYPE, TO_CHAR(ADD_TIME, 'YYYY-MM-DD HH24:MI:SS') AS ADD_TIME, TITLE, CONTENT, CONTENT_D, PRICE, STOCK, PIC, PIC_D
		FROM ITEM 
		WHERE ITEM_NO = #{item_no}
	</select>
	
	<!--수정-->
	<update id="itemUpdate" parameterType="Item">
		UPDATE ITEM 
		SET
			<if test="pic != null and pic != '' ">
				PIC = #{pic},
			</if>
			<if test="pic_d != null and pic_d != '' ">
				PIC_D = #{pic_d},
			</if> 
			ADD_TIME = LOCALTIMESTAMP, 
			TYPE = #{type},
			TITLE = #{title},
			CONTENT = #{content}, 
			CONTENT_D = #{content_d}, 
			PRICE = #{price}, 
			STOCK = #{stock}
		WHERE ITEM_NO = #{item_no}
	</update>
	
	<!--주문정보 -->
	<select id="orderList" parameterType="Buyer" resultType="map">
		SELECT * FROM ( SELECT A.*, ROWNUM RN FROM (
	
		  SELECT ROW_NUMBER() OVER(ORDER BY  BUYD_NO DESC) AS NO, D.BUYD_NO, D.BUY_NO, D.ITEM_NO, I.SELLER_ID, I.TYPE, I.TITLE, D.QUANTITY, I.PRICE, (D.QUANTITY * I.PRICE) AS PAYMENT ,B.MEM_ID, TO_CHAR(PAY_TIME, 'YYYY-MM-DD HH24:MI:SS') AS PAY_TIME, B.NAME, B.PHONE, B.ADDR_NO, B.ADDR, B.ADDR_D, B.EMAIL
				FROM BUYER_D D , ITEM I, BUYER B
				WHERE D.ITEM_NO = I.ITEM_NO
				AND D.BUY_NO = B.BUY_NO
				AND I.SELLER_ID = #{seller_id}
			<if test="pay_time != null and pay_time != '' ">
				AND TO_CHAR(PAY_TIME,'YYYY-MM-DD') = #{pay_time}
			</if> 
		
		) A ) B WHERE RN BETWEEN #{first} AND #{last}
	</select>
	
	<select id="orderCnt" parameterType="Buyer" resultType="int">
		SELECT COUNT(*)
		FROM BUYER_D D , ITEM I, BUYER B
		WHERE D.ITEM_NO = I.ITEM_NO
		AND D.BUY_NO = B.BUY_NO
		AND I.SELLER_ID = #{seller_id}
		<if test="pay_time != null and pay_time != '' ">
			AND TO_CHAR(PAY_TIME,'YYYY-MM-DD') = #{pay_time}
		</if> 
	</select>
	
	<!--매출정보 -->
	<select id="salesList" parameterType="string" resultType="map">
		SELECT NVL2(TO_CHAR(PAY_TIME,'YYYY-MM-DD'),TO_CHAR(PAY_TIME,'YYYY-MM-DD'),'#') AS PAY_TIME, SUM(D.QUANTITY * I.PRICE) AS SUM, COUNT(TO_CHAR(PAY_TIME,'YYYY-MM-DD')) AS CNT
		FROM BUYER_D D , ITEM I, BUYER B
		WHERE D.ITEM_NO = I.ITEM_NO
		AND D.BUY_NO = B.BUY_NO 
		AND I.SELLER_ID = #{seller_id}
		GROUP BY ROLLUP(TO_CHAR(PAY_TIME,'YYYY-MM-DD'))
		ORDER BY 1 DESC
	</select>
	
	<!--문의 정보 -->
	<select id="inquiryList" parameterType="Item" resultType="map">
		SELECT * FROM ( SELECT A.*, ROWNUM RN FROM (

		  SELECT ROW_NUMBER() OVER(ORDER BY  INQUIRY_NO DESC) AS NO, Q.INQUIRY_NO, Q.ITEM_NO, I.TITLE AS ITEM_TITLE, Q.MEM_ID, Q.TYPE, Q.TITLE, TO_CHAR(INSERT_DATE,'YYYY-MM-DD HH24:MI:SS') AS INSERT_DATE, Q.ANSWER, TO_CHAR(ANSWER_DATE,'YYYY-MM-DD HH24:MI:SS') AS ANSWER_DATE
				FROM INQUIRY Q, ITEM I
				WHERE I.ITEM_NO = Q.ITEM_NO
				AND I.SELLER_ID = #{seller_id}
				ORDER BY 1
		
		) A ) B WHERE RN BETWEEN #{first} AND #{last}
	</select>
	<select id="inquiryCnt" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM INQUIRY Q, ITEM I
		WHERE I.ITEM_NO = Q.ITEM_NO
		AND I.SELLER_ID = #{seller_id}
	</select>
	
	<!--답변 등록-->
	<update id="updateAnswer" parameterType="Inquiry">
		UPDATE INQUIRY 
		SET ANSWER = #{answer}, 
			ANSWER_DATE = LOCALTIMESTAMP
		WHERE INQUIRY_NO = #{inquiry_no}
	</update>

	
	</mapper>
